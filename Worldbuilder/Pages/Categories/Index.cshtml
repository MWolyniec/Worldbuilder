@page
@model Worldbuilder.Pages.Categories.IndexModel

@{
    ViewData["Title"] = "Categories";
}

<h1>Categories</h1>

<p>
    <a asp-page="Create">Create new category</a> | <a asp-page="../CategoryTypes/Create">Create new category type</a> | <a asp-page="../CategoryTypes/Index">View category types</a>
</p>
<form>
    <p>
        <select asp-for="CategoryTypeAsString" asp-items="Model.CategoryTypesAsSelectList">
            <option value="">All</option>
        </select>
        Look for: <input type="text" asp-for="SearchString" />
        <input type="submit" value="Filter" />
    </p>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.NameSort" asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.Categories[0].Name)
                </a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Categories[0].Description)
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.TypeSort" asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.Categories[0].CategoryType)
                </a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Categories)
        {
            <tr>
                <td>
                    <a asp-page="./Details" asp-route-id="@item.Id">
                        @Html.DisplayFor(modelItem => item.Name)
                    </a>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @if (item.CategoryType != null)
                    {
                        <a asp-page="/CategoryTypes/Details" asp-route-id="@item.CategoryType.Id">
                            @Html.DisplayFor(modelItem => item.CategoryType.Name)
                        </a>
                    }

                </td>
                <td>
                    <a asp-page="./Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-page="./Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-page="./Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.Categories.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Categories.HasNextPage ? "disabled" : "";
}

<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.Categories.PageIndex - 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.Categories.PageIndex + 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-default @nextDisabled">
    Next
</a>
